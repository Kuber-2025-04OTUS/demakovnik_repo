apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: homework
  name: kubernetes-controllers
  labels:
    homework: kubernetes-controllers
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1  # Максимум 1 под может быть недоступен
      maxSurge: 1        # Максимум 1 под может быть создан сверх replicas
  selector:
    matchLabels:
      homework: kubernetes-controllers
  template:
    metadata:
      labels:
        homework: kubernetes-controllers
    spec:
      nodeSelector:            # Добавляем выбор нод по метке
        homework: "true"      # Поды будут запускаться только на нодах с homework=true
      initContainers:
        - name: init
          image: busybox:1.36 
          command: ["/bin/sh", "-c"]
          args:
            - "echo 'Homework 2' > /init/index.html"
          volumeMounts:
            - name: webdir
              mountPath: /init  
      containers:
      - name: web-server
        image: nginx:1.27.2
        ports:
        - containerPort: 8000
        command: ["/bin/sh", "-c"]
        args:
          - "sed -i 's/listen       80;/listen 8000;/g' /etc/nginx/conf.d/default.conf; sed -i 's|root   /usr/share/nginx/html;|root /homework;|g' /etc/nginx/conf.d/default.conf; exec nginx -g 'daemon off;'"
        volumeMounts:
        - name: webdir
          mountPath: /homework
        lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "rm -f /homework/index.html"]
        readinessProbe:          # Добавляем проверку наличия файла
          exec:
            command: ["/bin/sh", "-c", "test -f /homework/index.html"]
          initialDelaySeconds: 5  # Задержка перед первой проверкой
          periodSeconds: 5        # Проверка каждые 5 секунд
          failureThreshold: 3     # После 3 неудачных проверок под считается "не готов"
      volumes:
        - name: webdir
          emptyDir: {}
  
